package vermittler;

import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;

import interfaces.MainScreenInterface;
import interfaces.Observer;
import interfaces.VermittlerInterface;

public class Vermittler extends java.rmi.server.UnicastRemoteObject implements Observer {

	private static final long serialVersionUID = 1L;
	
	private ArrayList<String> usersGUI;
	private ArrayList<String> usersSounds;
	
	public Vermittler() throws RemoteException {
		super();
		usersGUI = new ArrayList<>();
		usersSounds = new ArrayList<>();
	}
	
	public void start() {
		
		try {
			
			Registry registry = LocateRegistry.createRegistry(1099);
			
			while ( true ) {
				
				Thread.sleep(5000);
				
				final String[] services = registry.list();
				for ( String service : services ) {
					if ( service.substring(0, 3).equals("GUI") && !this.usersGUI.contains(service) ) {
						System.out.println("GUI Service added: " + service);
						MainScreenInterface msi = (MainScreenInterface) registry.lookup(service);
						this.usersGUI.add(service);
					}
					
					if ( service.substring(0, 3).equals("SND") && !this.usersSounds.contains(service) ) {
						System.out.println("Sound Service added: " + service);
						this.usersGUI.add(service);
					}
				
				}
				
			}
			
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	public static void main(String[] args) throws RemoteException {
		Vermittler s = new Vermittler();
		s.start();
}

	@Override
	public void update(String ButtonID) throws RemoteException {
		// TODO Auto-generated method stub
		
	}


	
}
