package rmi.interfaces;

import javax.sound.sampled.*;

import java.applet.Applet;
import java.applet.AudioClip;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URI;
import java.util.Random;

public class Sound {
	 public void run(int ID) {
		 
		  
		  switch(ID)
		  {
		  case 1:
			  InputStream is = getClass().getResourceAsStream("imperial_march.wav");
				try {
					javax.sound.sampled.AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(is);

					javax.sound.sampled.Clip clip = AudioSystem.getClip();;
					clip.open(audioInputStream);
					clip.start();
				} catch (UnsupportedAudioFileException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			  break;
	    
	    
		  case 2:
			  InputStream is2 = getClass().getResourceAsStream("Sarafina.wav");
				try {
					javax.sound.sampled.AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(is2);

					javax.sound.sampled.Clip clip = AudioSystem.getClip();;
					clip.open(audioInputStream);
					clip.start();
				} catch (UnsupportedAudioFileException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			  break;
		  case 3:
			  InputStream is3 = getClass().getResourceAsStream("push_it.wav");
				try {
					javax.sound.sampled.AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(is3);

					javax.sound.sampled.Clip clip = AudioSystem.getClip();;
					clip.open(audioInputStream);
					clip.start();
				} catch (UnsupportedAudioFileException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			
			  break;
	   
		  }
	  }
}
	/*
	 * public static void meeting(){
	 * 
	 * try { AudioInputStream audioInputStream =
	 * AudioSystem.getAudioInputStream(new
	 * File("/sounda/imperial_march.wav").getAbsoluteFile()); Clip clip =
	 * AudioSystem.getClip(); clip.open(audioInputStream); clip.start(); }
	 * catch(Exception ex) { System.out.println("Error with playing sound.");
	 * ex.printStackTrace(); }
	 * 
	 * }
	 * 
	 * public static void dinner(){
	 * 
	 * try { AudioInputStream audioInputStream =
	 * AudioSystem.getAudioInputStream(new
	 * File("/sounda/Sarafina.wav").getAbsoluteFile()); Clip clip =
	 * AudioSystem.getClip(); clip.open(audioInputStream); clip.start(); }
	 * catch(Exception ex) { System.out.println("Error with playing sound.");
	 * ex.printStackTrace(); }
	 * 
	 * } public static void afterwork(){
	 * 
	 * try { AudioInputStream audioInputStream =
	 * AudioSystem.getAudioInputStream(new
	 * File("/sounda/push_it.wav").getAbsoluteFile()); Clip clip =
	 * AudioSystem.getClip(); clip.open(audioInputStream); clip.start(); }
	 * catch(Exception ex) { System.out.println("Error with playing sound.");
	 * ex.printStackTrace(); }
	 * 
	 * }
	 */
