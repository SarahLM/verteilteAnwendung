package application;

import java.net.MalformedURLException;
import java.rmi.AlreadyBoundException;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;

import interfaces.Observer;

public class RmiService extends UnicastRemoteObject implements MainScreenInterface{

	MainScreenController msc;
	private ArrayList<Observer> observers;

	public RmiService(MainScreenController msc) throws RemoteException {
		super(0);
		this.msc = msc;
		observers = new ArrayList<>();
	}

	public void start() throws MalformedURLException, RemoteException, AlreadyBoundException{

		try{
			//Registry registry = LocateRegistry.createRegistry(1099); // Später zum Vermittler
			Registry registry = LocateRegistry.getRegistry();
			registry.bind("RmiService", this);
			System.out.println("Frontend Service ist ready");
		} catch (Exception e){
			System.err.println("Server exception: " + e.toString());
			e.printStackTrace();
		}
	}

	@Override
	public void setText(int buttonIndex, String text) throws RemoteException {
		msc.setText(buttonIndex, text);
	}

	@Override
	public void setBodyText(String text) throws RemoteException {
		msc.setBodyText(text);
	}

	@Override
	public void setPictures(int pictureIndex, boolean visible) throws RemoteException {
		msc.setPictures(pictureIndex, visible);
	}

	@Override
	public void register(Observer observer) throws RemoteException {
		observers.add(observer);
	}

	@Override
	public void unregister(Observer observer) throws RemoteException {
		observers.remove(observer);
}
	
}
